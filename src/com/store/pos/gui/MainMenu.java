/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.store.pos.gui;

import com.store.pos.model.entity.Customer;
import com.store.pos.model.entity.Item;
import com.store.pos.model.entity.ItemCategory;
import com.store.pos.model.entity.Profit;
import com.store.pos.model.entity.SupplierDetails;
import com.store.pos.model.entity.User;
import com.store.pos.model.entity.controller.CustomerJpaController;
import com.store.pos.model.entity.controller.ItemCategoryJpaController;
import com.store.pos.model.entity.controller.ItemJpaController;
import com.store.pos.model.entity.controller.SupplierDetailsJpaController;
import com.store.pos.model.entity.controller.UserJpaController;
import com.store.pos.model.entity.controller.exceptions.NonexistentEntityException;
import com.store.pos.util.Barcode4jGenerator;
import com.store.pos.util.BarcodeGenerator;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sourceforge.barbecue.BarcodeException;

/**
 *
 * @author Sanjeewa;
 */
public class MainMenu extends javax.swing.JFrame {

    EntityManagerFactory emfactory = Persistence.createEntityManagerFactory("POSsystemPU");
    EntityManager entitymanager = emfactory.createEntityManager();

    SupplierDetailsJpaController supplierControler = new SupplierDetailsJpaController(emfactory);
    UserJpaController userControler = new UserJpaController(emfactory);
    CustomerJpaController customerControler = new CustomerJpaController(emfactory);
    ItemCategoryJpaController itemCategoryControler = new ItemCategoryJpaController(emfactory);
    ItemJpaController itemControler = new ItemJpaController(emfactory);

    private String itemCategory_itemCode;
    private String cusromer_name;
    private String supplierReg_name;
    private String item_itemCode;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        POSsystemPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("POSsystemPU").createEntityManager();
        btnGroup_userAcc = new javax.swing.ButtonGroup();
        btnGroup_customerReg = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabControll = new javax.swing.JPanel();
        controlLeftPanel = new javax.swing.JPanel();
        btn_control_user = new javax.swing.JButton();
        btn_control_userControl = new javax.swing.JButton();
        btn_control_profit = new javax.swing.JButton();
        btn_control_customerReg = new javax.swing.JButton();
        btn_control_suplierReg = new javax.swing.JButton();
        btn_control_customerLoan = new javax.swing.JButton();
        controlPanel = new javax.swing.JPanel();
        panel_user = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_userAcc_name = new javax.swing.JTextField();
        tf_userAcc_password = new javax.swing.JPasswordField();
        tf_userAcc_confirmPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cb_userAcc_securityQ = new javax.swing.JComboBox();
        tf_userAcc_sequrityAnswer = new javax.swing.JTextField();
        rb_userAcc_user = new javax.swing.JRadioButton();
        rb_userAcc_admin = new javax.swing.JRadioButton();
        btn_userAcc_save = new javax.swing.JButton();
        btn_userAcc_update = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_userReg = new javax.swing.JTable();
        btn_userAcc_edit = new javax.swing.JButton();
        btn_userAcc_refresh = new javax.swing.JButton();
        btn_userAcc_delete = new javax.swing.JButton();
        panel_userControl = new javax.swing.JPanel();
        panel_profit = new javax.swing.JPanel();
        rb_profit_month = new javax.swing.JRadioButton();
        rb_profit_daily = new javax.swing.JRadioButton();
        mc_profit_month = new com.toedter.calendar.JMonthChooser();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_profit = new javax.swing.JTable();
        calender_profit_daily = new com.toedter.calendar.JDateChooser();
        btn_profit_refresh = new javax.swing.JButton();
        panel_customerReg = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tf_customerReg_name = new javax.swing.JTextField();
        tf_customerReg_address1 = new javax.swing.JTextField();
        tf_customerReg_address2 = new javax.swing.JTextField();
        tf_customerReg_address3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        tf_customerReg_loan = new javax.swing.JTextField();
        tf_customerReg_loanPeriod = new javax.swing.JTextField();
        tf_customerReg_telNo = new javax.swing.JTextField();
        rb_customerReg_active = new javax.swing.JRadioButton();
        rb_customerReg_deactive = new javax.swing.JRadioButton();
        btn_customerReg_save = new javax.swing.JButton();
        btn_customerReg_update = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_customerReg = new javax.swing.JTable();
        btn_customerReg_edit = new javax.swing.JButton();
        btn_customerReg_refresh = new javax.swing.JButton();
        btn_customerReg_delete = new javax.swing.JButton();
        panel_suplierReg = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        tf_suplierReg_name = new javax.swing.JTextField();
        tf_suplierReg_contactName = new javax.swing.JTextField();
        tf_suplierReg_address1 = new javax.swing.JTextField();
        tf_suplierReg_address2 = new javax.swing.JTextField();
        tf_suplierReg_address3 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        tf_suplierReg_telNo = new javax.swing.JTextField();
        tf_suplierReg_faxNo = new javax.swing.JTextField();
        tf_suplierReg_Loan = new javax.swing.JTextField();
        tf_suplierReg_loanPeriod = new javax.swing.JTextField();
        cb_suplierReg_category = new javax.swing.JComboBox();
        btn_suplerReg_save = new javax.swing.JButton();
        btn_suplerReg_update = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_suplierReg = new javax.swing.JTable();
        btn_suplerReg_edit = new javax.swing.JButton();
        btn_suplerReg_refresh = new javax.swing.JButton();
        btn_suplerReg_delete = new javax.swing.JButton();
        panel_customerLoan = new javax.swing.JPanel();
        tabItem = new javax.swing.JPanel();
        itemLeftPanel = new javax.swing.JPanel();
        btn_item_itemCategory = new javax.swing.JButton();
        btn_item_itemReg = new javax.swing.JButton();
        btn_item_inventory = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        itemPane = new javax.swing.JPanel();
        panel_itemCategory = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        tf_itemCategory_itemCode = new javax.swing.JTextField();
        tf_itemCategory_itemName = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        table_itemCategory = new javax.swing.JTable();
        btn_itemCategory_save = new javax.swing.JButton();
        btn_itemCategory_update = new javax.swing.JButton();
        btn_itemCategory_edit = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JSeparator();
        btn_itemCategory_refresh = new javax.swing.JButton();
        btn_itemCategory_delete = new javax.swing.JButton();
        panel_itemReg = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        tf_itemReg_itemCode = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        tf_itemReg_itemName = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        tf_itemReg_barcode = new javax.swing.JTextField();
        cb_itemReg_itemCategory = new javax.swing.JComboBox();
        jLabel35 = new javax.swing.JLabel();
        tf_itemReg_cost = new javax.swing.JTextField();
        tf_itemReg_wholesale = new javax.swing.JTextField();
        tf_itemReg_retail = new javax.swing.JTextField();
        btn_itemReg_save = new javax.swing.JButton();
        btn_itemReg_barcode = new javax.swing.JButton();
        btn_itemReg_update = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        table_itemReg = new javax.swing.JTable();
        jSeparator6 = new javax.swing.JSeparator();
        btn_itemReg_edit = new javax.swing.JButton();
        btn_itemReg_refresh = new javax.swing.JButton();
        btn_itemReg_delete = new javax.swing.JButton();
        panel_inventory = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        tabTransaction = new javax.swing.JPanel();
        tabReport = new javax.swing.JPanel();
        tabAction = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));

        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 0, 20)); // NOI18N

        tabControll.setLayout(new java.awt.BorderLayout());

        controlLeftPanel.setBackground(new java.awt.Color(204, 204, 255));
        controlLeftPanel.setPreferredSize(new java.awt.Dimension(150, 637));

        btn_control_user.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_control_user.setText("User");
        btn_control_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_control_userActionPerformed(evt);
            }
        });

        btn_control_userControl.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_control_userControl.setText("User Control");
        btn_control_userControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_control_userControlActionPerformed(evt);
            }
        });

        btn_control_profit.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_control_profit.setText("Profit");
        btn_control_profit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_control_profitActionPerformed(evt);
            }
        });

        btn_control_customerReg.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_control_customerReg.setText("Customer Reg");
        btn_control_customerReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_control_customerRegActionPerformed(evt);
            }
        });

        btn_control_suplierReg.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_control_suplierReg.setText("Supplier Reg");
        btn_control_suplierReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_control_suplierRegActionPerformed(evt);
            }
        });

        btn_control_customerLoan.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_control_customerLoan.setText("Customer Loan");
        btn_control_customerLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_control_customerLoanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlLeftPanelLayout = new javax.swing.GroupLayout(controlLeftPanel);
        controlLeftPanel.setLayout(controlLeftPanelLayout);
        controlLeftPanelLayout.setHorizontalGroup(
            controlLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_control_user, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_control_userControl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btn_control_profit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btn_control_customerReg, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btn_control_suplierReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btn_control_customerLoan, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addContainerGap())
        );
        controlLeftPanelLayout.setVerticalGroup(
            controlLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlLeftPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btn_control_user, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_control_userControl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_control_profit, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_control_customerReg, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_control_suplierReg, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_control_customerLoan, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(339, Short.MAX_VALUE))
        );

        tabControll.add(controlLeftPanel, java.awt.BorderLayout.LINE_START);

        controlPanel.setLayout(new java.awt.CardLayout());

        panel_user.setBackground(new java.awt.Color(236, 235, 235));
        panel_user.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("Password");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Conform Password");

        tf_userAcc_name.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_userAcc_password.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_userAcc_confirmPassword.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Sequrity Question");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel5.setText("Sequrity Answer");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setText("User Type");

        cb_userAcc_securityQ.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cb_userAcc_securityQ.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb_userAcc_securityQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_userAcc_securityQActionPerformed(evt);
            }
        });

        tf_userAcc_sequrityAnswer.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btnGroup_userAcc.add(rb_userAcc_user);
        rb_userAcc_user.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rb_userAcc_user.setSelected(true);
        rb_userAcc_user.setText("User");

        btnGroup_userAcc.add(rb_userAcc_admin);
        rb_userAcc_admin.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rb_userAcc_admin.setText("Admin");

        btn_userAcc_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_userAcc_save.setText("Save");
        btn_userAcc_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_userAcc_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_userAcc_saveActionPerformed(evt);
            }
        });

        btn_userAcc_update.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_userAcc_update.setText("Update");
        btn_userAcc_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_userAcc_update.setEnabled(false);

        table_userReg.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        table_userReg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "User Type", "Sequrity Question"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_userReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_userRegMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_userReg);

        btn_userAcc_edit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_userAcc_edit.setText("Edit");
        btn_userAcc_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_userAcc_edit.setEnabled(false);
        btn_userAcc_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_userAcc_editActionPerformed(evt);
            }
        });

        btn_userAcc_refresh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_userAcc_refresh.setText("Refresh");
        btn_userAcc_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_userAcc_refreshActionPerformed(evt);
            }
        });

        btn_userAcc_delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_userAcc_delete.setText("Delete");
        btn_userAcc_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_userAcc_delete.setEnabled(false);

        javax.swing.GroupLayout panel_userLayout = new javax.swing.GroupLayout(panel_user);
        panel_user.setLayout(panel_userLayout);
        panel_userLayout.setHorizontalGroup(
            panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_userLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_userLayout.createSequentialGroup()
                        .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_userAcc_confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_userAcc_password, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_userLayout.createSequentialGroup()
                                .addComponent(rb_userAcc_user, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rb_userAcc_admin))
                            .addComponent(tf_userAcc_sequrityAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_userAcc_securityQ, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_userAcc_update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_userAcc_delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_userLayout.createSequentialGroup()
                        .addComponent(tf_userAcc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_userAcc_save, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(209, 209, 209))
            .addGroup(panel_userLayout.createSequentialGroup()
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_userLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_userAcc_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_userAcc_refresh))
                    .addGroup(panel_userLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1046, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        panel_userLayout.setVerticalGroup(
            panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_userLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tf_userAcc_name))
                    .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cb_userAcc_securityQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_userAcc_save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                        .addComponent(tf_userAcc_password))
                    .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_userAcc_update, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tf_userAcc_sequrityAnswer))
                .addGap(18, 18, 18)
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_userAcc_confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_userAcc_user, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(rb_userAcc_admin)
                    .addComponent(btn_userAcc_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(panel_userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_userAcc_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_userAcc_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );

        controlPanel.add(panel_user, "card7");

        panel_userControl.setBackground(new java.awt.Color(233, 221, 238));

        javax.swing.GroupLayout panel_userControlLayout = new javax.swing.GroupLayout(panel_userControl);
        panel_userControl.setLayout(panel_userControlLayout);
        panel_userControlLayout.setHorizontalGroup(
            panel_userControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1256, Short.MAX_VALUE)
        );
        panel_userControlLayout.setVerticalGroup(
            panel_userControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        controlPanel.add(panel_userControl, "card6");

        panel_profit.setBackground(new java.awt.Color(228, 240, 240));
        panel_profit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Profit", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        rb_profit_month.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rb_profit_month.setText("Search by Monthly");

        rb_profit_daily.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rb_profit_daily.setText("Search by Daily");

        mc_profit_month.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        table_profit.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        table_profit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Income", "Cost", "Profit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_profit);

        calender_profit_daily.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btn_profit_refresh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_profit_refresh.setText("Refresh");
        btn_profit_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_profit_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_profit_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_profitLayout = new javax.swing.GroupLayout(panel_profit);
        panel_profit.setLayout(panel_profitLayout);
        panel_profitLayout.setHorizontalGroup(
            panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_profitLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_profitLayout.createSequentialGroup()
                        .addComponent(rb_profit_month, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mc_profit_month, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_profitLayout.createSequentialGroup()
                        .addComponent(rb_profit_daily, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(calender_profit_daily, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(73, 73, 73)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_profit_refresh)
                .addContainerGap(212, Short.MAX_VALUE))
        );
        panel_profitLayout.setVerticalGroup(
            panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_profitLayout.createSequentialGroup()
                .addGroup(panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_profitLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rb_profit_month, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mc_profit_month, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(195, 195, 195)
                        .addGroup(panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rb_profit_daily, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                            .addComponent(calender_profit_daily, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panel_profitLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_profitLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(panel_profitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_profit_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(169, Short.MAX_VALUE))
        );

        controlPanel.add(panel_profit, "card5");

        panel_customerReg.setBackground(new java.awt.Color(223, 233, 200));
        panel_customerReg.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setText("Customer Name");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel8.setText("Address :");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setText("Field 1");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel10.setText("Field 2");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel11.setText("Field 3");

        tf_customerReg_name.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_customerReg_address1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_customerReg_address2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_customerReg_address3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel12.setText("Loan");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel13.setText("Loan Period");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel14.setText("Telephone No");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel15.setText("Customer Type");

        tf_customerReg_loan.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_customerReg_loanPeriod.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tf_customerReg_loanPeriod.setToolTipText("How many month given to pay");

        tf_customerReg_telNo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btnGroup_customerReg.add(rb_customerReg_active);
        rb_customerReg_active.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rb_customerReg_active.setSelected(true);
        rb_customerReg_active.setText("Active");

        btnGroup_customerReg.add(rb_customerReg_deactive);
        rb_customerReg_deactive.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        rb_customerReg_deactive.setText("Deactive");
        rb_customerReg_deactive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_customerReg_deactiveActionPerformed(evt);
            }
        });

        btn_customerReg_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_customerReg_save.setText("Save");
        btn_customerReg_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_customerReg_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customerReg_saveActionPerformed(evt);
            }
        });

        btn_customerReg_update.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_customerReg_update.setText("Update");
        btn_customerReg_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_customerReg_update.setEnabled(false);
        btn_customerReg_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customerReg_updateActionPerformed(evt);
            }
        });

        table_customerReg.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        table_customerReg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Name", "Address", "Telephone No", "Loan", "Loan Period", "Customer Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_customerReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_customerRegMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_customerReg);

        btn_customerReg_edit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_customerReg_edit.setText("Edit");
        btn_customerReg_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_customerReg_edit.setEnabled(false);
        btn_customerReg_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customerReg_editActionPerformed(evt);
            }
        });

        btn_customerReg_refresh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_customerReg_refresh.setText("Refresh");
        btn_customerReg_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_customerReg_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customerReg_refreshActionPerformed(evt);
            }
        });

        btn_customerReg_delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_customerReg_delete.setText("Delete");
        btn_customerReg_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_customerReg_delete.setEnabled(false);
        btn_customerReg_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customerReg_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_customerRegLayout = new javax.swing.GroupLayout(panel_customerReg);
        panel_customerReg.setLayout(panel_customerRegLayout);
        panel_customerRegLayout.setHorizontalGroup(
            panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_customerRegLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panel_customerRegLayout.createSequentialGroup()
                        .addComponent(btn_customerReg_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_customerReg_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_customerRegLayout.createSequentialGroup()
                        .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panel_customerRegLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panel_customerRegLayout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                                        .addGap(73, 73, 73))
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_customerReg_name, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_customerReg_address1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_customerReg_address2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_customerReg_address3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(108, 108, 108)
                        .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panel_customerRegLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rb_customerReg_active, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(rb_customerReg_deactive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(panel_customerRegLayout.createSequentialGroup()
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tf_customerReg_telNo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panel_customerRegLayout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tf_customerReg_loanPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panel_customerRegLayout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tf_customerReg_loan, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(87, 87, 87)
                        .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_customerReg_save, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_customerReg_update, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_customerReg_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 142, Short.MAX_VALUE))
        );
        panel_customerRegLayout.setVerticalGroup(
            panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_customerRegLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_name, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_loan, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_customerReg_save, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_address1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_loanPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_address2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_telNo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_customerReg_update, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_customerReg_address3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_customerReg_active)
                    .addComponent(rb_customerReg_deactive)
                    .addComponent(btn_customerReg_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel_customerRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_customerReg_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_customerReg_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(185, Short.MAX_VALUE))
        );

        controlPanel.add(panel_customerReg, "card4");

        panel_suplierReg.setBackground(new java.awt.Color(226, 218, 193));
        panel_suplierReg.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Suplier Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel16.setText("Suplier Name");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel17.setText("Contact Person Name");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel18.setText("Address :");

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel19.setText("Field 1");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel20.setText("Field 2");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel21.setText("Field 3");

        tf_suplierReg_name.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_contactName.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_address1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_address2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_address3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel22.setText("Telephone No");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel23.setText("Fax No");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel24.setText("Loan");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel25.setText("Loan Period");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel26.setText("Category");

        tf_suplierReg_telNo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_faxNo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_Loan.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_suplierReg_loanPeriod.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        cb_suplierReg_category.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cb_suplierReg_category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Private", "Government" }));

        btn_suplerReg_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_suplerReg_save.setText("Save");
        btn_suplerReg_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_suplerReg_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suplerReg_saveActionPerformed(evt);
            }
        });

        btn_suplerReg_update.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_suplerReg_update.setText("Update");
        btn_suplerReg_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_suplerReg_update.setEnabled(false);
        btn_suplerReg_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suplerReg_updateActionPerformed(evt);
            }
        });

        table_suplierReg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Suplier Name", "Contact Name", "Address", "Telephone No", "Fax No", "Loan", "Loan Period", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_suplierReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_suplierRegMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table_suplierReg);

        btn_suplerReg_edit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_suplerReg_edit.setText("Edit");
        btn_suplerReg_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_suplerReg_edit.setEnabled(false);
        btn_suplerReg_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suplerReg_editActionPerformed(evt);
            }
        });

        btn_suplerReg_refresh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_suplerReg_refresh.setText("Refresh");
        btn_suplerReg_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_suplerReg_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suplerReg_refreshActionPerformed(evt);
            }
        });

        btn_suplerReg_delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_suplerReg_delete.setText("Delete");
        btn_suplerReg_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_suplerReg_delete.setEnabled(false);
        btn_suplerReg_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suplerReg_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_suplierRegLayout = new javax.swing.GroupLayout(panel_suplierReg);
        panel_suplierReg.setLayout(panel_suplierRegLayout);
        panel_suplierRegLayout.setHorizontalGroup(
            panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_suplierRegLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panel_suplierRegLayout.createSequentialGroup()
                        .addComponent(btn_suplerReg_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_suplerReg_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_suplierRegLayout.createSequentialGroup()
                        .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_suplierRegLayout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tf_suplierReg_name, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_suplierReg_contactName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_suplierReg_address1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_suplierReg_address2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_suplierReg_address3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(123, 123, 123)
                        .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_suplierReg_telNo, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(tf_suplierReg_faxNo, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(tf_suplierReg_Loan, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(tf_suplierReg_loanPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(cb_suplierReg_category, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panel_suplierRegLayout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_suplerReg_save, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_suplerReg_update, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_suplierRegLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_suplerReg_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        panel_suplierRegLayout.setVerticalGroup(
            panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_suplierRegLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_telNo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_suplerReg_save, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_contactName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_faxNo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_address1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_Loan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_suplerReg_update, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_address2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_suplierReg_loanPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_suplierReg_category)
                        .addComponent(btn_suplerReg_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_suplierReg_address3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel_suplierRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_suplerReg_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_suplerReg_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(193, 193, 193))
        );

        controlPanel.add(panel_suplierReg, "card3");

        panel_customerLoan.setBackground(new java.awt.Color(208, 230, 223));

        javax.swing.GroupLayout panel_customerLoanLayout = new javax.swing.GroupLayout(panel_customerLoan);
        panel_customerLoan.setLayout(panel_customerLoanLayout);
        panel_customerLoanLayout.setHorizontalGroup(
            panel_customerLoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1256, Short.MAX_VALUE)
        );
        panel_customerLoanLayout.setVerticalGroup(
            panel_customerLoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        controlPanel.add(panel_customerLoan, "card2");

        tabControll.add(controlPanel, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("     Control     ", tabControll);

        tabItem.setLayout(new java.awt.BorderLayout());

        itemLeftPanel.setBackground(new java.awt.Color(204, 204, 255));
        itemLeftPanel.setPreferredSize(new java.awt.Dimension(150, 787));

        btn_item_itemCategory.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_item_itemCategory.setText("Item Category");
        btn_item_itemCategory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_item_itemCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_item_itemCategoryActionPerformed(evt);
            }
        });

        btn_item_itemReg.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_item_itemReg.setText("Item Reg");
        btn_item_itemReg.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_item_itemReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_item_itemRegActionPerformed(evt);
            }
        });

        btn_item_inventory.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        btn_item_inventory.setText("Inventory");
        btn_item_inventory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_item_inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_item_inventoryActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jButton7.setText("Discount Item");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jButton8.setText("jButton4");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jButton9.setText("jButton4");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout itemLeftPanelLayout = new javax.swing.GroupLayout(itemLeftPanel);
        itemLeftPanel.setLayout(itemLeftPanelLayout);
        itemLeftPanelLayout.setHorizontalGroup(
            itemLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemLeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_item_itemCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_item_itemReg, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(btn_item_inventory, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                .addContainerGap())
        );
        itemLeftPanelLayout.setVerticalGroup(
            itemLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemLeftPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btn_item_itemCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_item_itemReg, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_item_inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(329, Short.MAX_VALUE))
        );

        tabItem.add(itemLeftPanel, java.awt.BorderLayout.LINE_START);

        itemPane.setLayout(new java.awt.CardLayout());

        panel_itemCategory.setBackground(new java.awt.Color(220, 219, 219));
        panel_itemCategory.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel27.setText("Item Category Code");

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel28.setText("Item Category Name");

        tf_itemCategory_itemCode.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tf_itemCategory_itemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_itemCategory_itemCodeActionPerformed(evt);
            }
        });

        tf_itemCategory_itemName.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        table_itemCategory.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        table_itemCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Category Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_itemCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_itemCategoryMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(table_itemCategory);

        btn_itemCategory_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemCategory_save.setText("Save");
        btn_itemCategory_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemCategory_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemCategory_saveActionPerformed(evt);
            }
        });

        btn_itemCategory_update.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemCategory_update.setText("Update");
        btn_itemCategory_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemCategory_update.setEnabled(false);
        btn_itemCategory_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemCategory_updateActionPerformed(evt);
            }
        });

        btn_itemCategory_edit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemCategory_edit.setText("Edit");
        btn_itemCategory_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemCategory_edit.setEnabled(false);
        btn_itemCategory_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemCategory_editActionPerformed(evt);
            }
        });

        jSeparator5.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btn_itemCategory_refresh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemCategory_refresh.setText("Refresh");
        btn_itemCategory_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemCategory_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemCategory_refreshActionPerformed(evt);
            }
        });

        btn_itemCategory_delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemCategory_delete.setText("Delete");
        btn_itemCategory_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemCategory_delete.setEnabled(false);
        btn_itemCategory_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemCategory_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_itemCategoryLayout = new javax.swing.GroupLayout(panel_itemCategory);
        panel_itemCategory.setLayout(panel_itemCategoryLayout);
        panel_itemCategoryLayout.setHorizontalGroup(
            panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_itemCategory_save, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                        .addComponent(btn_itemCategory_update, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(btn_itemCategory_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tf_itemCategory_itemCode)
                    .addComponent(tf_itemCategory_itemName))
                .addGap(50, 50, 50)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_itemCategory_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_itemCategory_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        panel_itemCategoryLayout.setVerticalGroup(
            panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                        .addComponent(btn_itemCategory_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btn_itemCategory_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(210, Short.MAX_VALUE))
                    .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                        .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tf_itemCategory_itemCode)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_itemCategory_itemName))
                        .addGap(54, 54, 54)
                        .addGroup(panel_itemCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_itemCategory_save, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_itemCategory_update, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_itemCategory_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panel_itemCategoryLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        itemPane.add(panel_itemCategory, "card7");

        panel_itemReg.setBackground(new java.awt.Color(208, 225, 210));
        panel_itemReg.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Registration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel29.setText("Item Code");

        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel30.setText("Item Name");

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel31.setText("Item Category");

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel32.setText("Barode");

        tf_itemReg_itemCode.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel33.setText("Cost");

        tf_itemReg_itemName.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel34.setText("Wholesale Price");

        tf_itemReg_barcode.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tf_itemReg_barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_itemReg_barcodeActionPerformed(evt);
            }
        });

        cb_itemReg_itemCategory.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        cb_itemReg_itemCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel35.setText("Retail Price");

        tf_itemReg_cost.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_itemReg_wholesale.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tf_itemReg_retail.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        btn_itemReg_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemReg_save.setText("Save");
        btn_itemReg_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemReg_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemReg_saveActionPerformed(evt);
            }
        });

        btn_itemReg_barcode.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemReg_barcode.setText("Barcode Genarator");
        btn_itemReg_barcode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemReg_barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemReg_barcodeActionPerformed(evt);
            }
        });

        btn_itemReg_update.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemReg_update.setText("Update");
        btn_itemReg_update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemReg_update.setEnabled(false);
        btn_itemReg_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemReg_updateActionPerformed(evt);
            }
        });

        table_itemReg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Code", "Item Name", "Item Category", "Barcode", "Cost", "Wholesale Price", "Retail Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_itemReg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_itemRegMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(table_itemReg);

        btn_itemReg_edit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemReg_edit.setText("Edit");
        btn_itemReg_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemReg_edit.setEnabled(false);
        btn_itemReg_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemReg_editActionPerformed(evt);
            }
        });

        btn_itemReg_refresh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemReg_refresh.setText("Refresh");
        btn_itemReg_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemReg_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemReg_refreshActionPerformed(evt);
            }
        });

        btn_itemReg_delete.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btn_itemReg_delete.setText("Delete");
        btn_itemReg_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_itemReg_delete.setEnabled(false);
        btn_itemReg_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_itemReg_deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_itemRegLayout = new javax.swing.GroupLayout(panel_itemReg);
        panel_itemReg.setLayout(panel_itemRegLayout);
        panel_itemRegLayout.setHorizontalGroup(
            panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_itemRegLayout.createSequentialGroup()
                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_itemRegLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_itemRegLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panel_itemRegLayout.createSequentialGroup()
                                .addComponent(btn_itemReg_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_itemReg_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_itemRegLayout.createSequentialGroup()
                                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panel_itemRegLayout.createSequentialGroup()
                                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tf_itemReg_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btn_itemReg_save, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panel_itemRegLayout.createSequentialGroup()
                                        .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(panel_itemRegLayout.createSequentialGroup()
                                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(cb_itemReg_itemCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(panel_itemRegLayout.createSequentialGroup()
                                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(tf_itemReg_itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(panel_itemRegLayout.createSequentialGroup()
                                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(tf_itemReg_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(152, 152, 152)
                                        .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panel_itemRegLayout.createSequentialGroup()
                                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tf_itemReg_wholesale, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panel_itemRegLayout.createSequentialGroup()
                                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tf_itemReg_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(panel_itemRegLayout.createSequentialGroup()
                                                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(tf_itemReg_retail, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(77, 77, 77)
                                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn_itemReg_barcode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_itemReg_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_itemReg_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        panel_itemRegLayout.setVerticalGroup(
            panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_itemRegLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_itemReg_itemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_itemReg_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_itemReg_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_itemReg_itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_itemReg_wholesale, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cb_itemReg_itemCategory)
                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_itemReg_retail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_itemReg_update, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_itemReg_save, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_itemReg_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_itemReg_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panel_itemRegLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_itemReg_edit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_itemReg_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(209, Short.MAX_VALUE))
        );

        itemPane.add(panel_itemReg, "card6");

        panel_inventory.setBackground(new java.awt.Color(238, 231, 216));
        panel_inventory.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inventory", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        javax.swing.GroupLayout panel_inventoryLayout = new javax.swing.GroupLayout(panel_inventory);
        panel_inventory.setLayout(panel_inventoryLayout);
        panel_inventoryLayout.setHorizontalGroup(
            panel_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1244, Short.MAX_VALUE)
        );
        panel_inventoryLayout.setVerticalGroup(
            panel_inventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );

        itemPane.add(panel_inventory, "card5");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1256, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        itemPane.add(jPanel2, "card3");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1256, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        itemPane.add(jPanel6, "card4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1256, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        itemPane.add(jPanel1, "card2");

        tabItem.add(itemPane, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("       Item       ", tabItem);

        javax.swing.GroupLayout tabTransactionLayout = new javax.swing.GroupLayout(tabTransaction);
        tabTransaction.setLayout(tabTransactionLayout);
        tabTransactionLayout.setHorizontalGroup(
            tabTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1406, Short.MAX_VALUE)
        );
        tabTransactionLayout.setVerticalGroup(
            tabTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("    Transaction    ", tabTransaction);

        javax.swing.GroupLayout tabReportLayout = new javax.swing.GroupLayout(tabReport);
        tabReport.setLayout(tabReportLayout);
        tabReportLayout.setHorizontalGroup(
            tabReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1406, Short.MAX_VALUE)
        );
        tabReportLayout.setVerticalGroup(
            tabReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("      Report      ", tabReport);

        javax.swing.GroupLayout tabActionLayout = new javax.swing.GroupLayout(tabAction);
        tabAction.setLayout(tabActionLayout);
        tabActionLayout.setHorizontalGroup(
            tabActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1406, Short.MAX_VALUE)
        );
        tabActionLayout.setVerticalGroup(
            tabActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("      Action      ", tabAction);

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_control_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_control_userActionPerformed
        controlPanel.removeAll();
        controlPanel.add(panel_user);
        controlPanel.repaint();
        controlPanel.revalidate();
    }//GEN-LAST:event_btn_control_userActionPerformed

    private void btn_control_userControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_control_userControlActionPerformed
        controlPanel.removeAll();
        controlPanel.add(panel_userControl);
        controlPanel.repaint();
        controlPanel.revalidate();
    }//GEN-LAST:event_btn_control_userControlActionPerformed

    private void btn_control_profitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_control_profitActionPerformed
        controlPanel.removeAll();
        controlPanel.add(panel_profit);
        controlPanel.repaint();
        controlPanel.revalidate();
    }//GEN-LAST:event_btn_control_profitActionPerformed

    private void btn_control_customerRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_control_customerRegActionPerformed
        controlPanel.removeAll();
        controlPanel.add(panel_customerReg);
        controlPanel.repaint();
        controlPanel.revalidate();
    }//GEN-LAST:event_btn_control_customerRegActionPerformed

    private void btn_control_suplierRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_control_suplierRegActionPerformed
        controlPanel.removeAll();
        controlPanel.add(panel_suplierReg);
        controlPanel.repaint();
        controlPanel.revalidate();
    }//GEN-LAST:event_btn_control_suplierRegActionPerformed

    private void btn_control_customerLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_control_customerLoanActionPerformed
        controlPanel.removeAll();
        controlPanel.add(panel_customerLoan);
        controlPanel.repaint();
        controlPanel.revalidate();
    }//GEN-LAST:event_btn_control_customerLoanActionPerformed

    private void cb_userAcc_securityQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_userAcc_securityQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_userAcc_securityQActionPerformed

    private void rb_customerReg_deactiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_customerReg_deactiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb_customerReg_deactiveActionPerformed

    private void btn_item_itemCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_item_itemCategoryActionPerformed
        itemPane.removeAll();
        itemPane.add(panel_itemCategory);
        itemPane.repaint();
        itemPane.revalidate();
    }//GEN-LAST:event_btn_item_itemCategoryActionPerformed

    private void btn_item_itemRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_item_itemRegActionPerformed
        itemPane.removeAll();
        itemPane.add(panel_itemReg);
        itemPane.repaint();
        itemPane.revalidate();
    }//GEN-LAST:event_btn_item_itemRegActionPerformed

    private void btn_item_inventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_item_inventoryActionPerformed
        itemPane.removeAll();
        itemPane.add(panel_inventory);
        itemPane.repaint();
        itemPane.revalidate();
    }//GEN-LAST:event_btn_item_inventoryActionPerformed

    private void tf_itemReg_barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_itemReg_barcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_itemReg_barcodeActionPerformed

    private void btn_suplerReg_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suplerReg_saveActionPerformed

        String name = tf_suplierReg_name.getText();
        String contactName = tf_suplierReg_contactName.getText();
        String address1 = tf_suplierReg_address1.getText();
        String address2 = tf_suplierReg_address2.getText();
        String address3 = tf_suplierReg_address3.getText();
        String address = address1 + ", " + address2 + ", " + address3;
        String telNo = tf_suplierReg_telNo.getText();
        String faxNo = tf_suplierReg_faxNo.getText();
        String loan = tf_suplierReg_Loan.getText();
        String loanPeriod = tf_suplierReg_loanPeriod.getText();
        String category = cb_suplierReg_category.getSelectedItem().toString();

        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Name Field must be initialize", "Suplier Registration", JOptionPane.ERROR_MESSAGE);
        } else {

            SupplierDetails supplier = new SupplierDetails();

            supplier.setSupplierName(name);
            supplier.setContactName(contactName);
            supplier.setAddress(address);
            supplier.setTelNo(telNo);
            supplier.setFaxNo(faxNo);
            supplier.setLoan(loan);
            supplier.setLoanPeriod(loanPeriod);
            supplier.setCategory(category);

            //String address = tf_suplierReg_address1.getText() + ", " + tf_suplierReg_address2.getText() + ", " + tf_suplierReg_address3.getText();
            supplierControler.create(supplier);

            JOptionPane.showMessageDialog(null, "Data Sucessfully saved !", "Suplier Registration", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) table_suplierReg.getModel();
            model.addRow(new Object[]{name, contactName, address, telNo, faxNo, loan, loanPeriod, category});

            tf_suplierReg_name.setText("");
            tf_suplierReg_contactName.setText("");
            tf_suplierReg_address1.setText("");
            tf_suplierReg_address2.setText("");
            tf_suplierReg_address3.setText("");
            tf_suplierReg_telNo.setText("");
            tf_suplierReg_faxNo.setText("");
            tf_suplierReg_Loan.setText("");
            tf_suplierReg_loanPeriod.setText("");
        }
    }//GEN-LAST:event_btn_suplerReg_saveActionPerformed

    private void btn_userAcc_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_userAcc_saveActionPerformed

        rb_userAcc_admin.setActionCommand("Admin");
        rb_userAcc_user.setActionCommand("User");

        String name = tf_userAcc_name.getText();
        String checkPassword = tf_userAcc_password.getText();
        String confirmPassword = tf_userAcc_confirmPassword.getText();

        if (name.isEmpty() || checkPassword.isEmpty() || confirmPassword.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name and Password must be initialize", "User Registration", JOptionPane.ERROR_MESSAGE);
        } else {
            if (checkPassword.equals(confirmPassword)) {
                User user = new User();

                String Password = createMD5Password(tf_userAcc_password.getText());

                user.setName(tf_userAcc_name.getText());
                user.setPassword(Password);
                user.setSequrityQ(cb_userAcc_securityQ.getSelectedItem().toString());
                user.setSequrityA(tf_userAcc_sequrityAnswer.getText());
                user.setUserType(btnGroup_userAcc.getSelection().getActionCommand());

                DefaultTableModel model = (DefaultTableModel) table_userReg.getModel();
                model.addRow(new Object[]{tf_userAcc_name.getText(), btnGroup_userAcc.getSelection().getActionCommand(), cb_userAcc_securityQ.getSelectedItem().toString()});

                userControler.create(user);

                JOptionPane.showMessageDialog(null, "Data Sucessfully saved !", "User Registration", JOptionPane.INFORMATION_MESSAGE);

                tf_userAcc_name.setText("");
                //cb_userAcc_securityQ.setSelectedItem(evt);
                tf_userAcc_sequrityAnswer.setText("");
                tf_userAcc_password.setText("");
                tf_userAcc_confirmPassword.setText("");
            } else {
                JOptionPane.showMessageDialog(null, "Password Doesn't match !", "Password Error", JOptionPane.ERROR_MESSAGE);
                tf_userAcc_password.setText("");
                tf_userAcc_confirmPassword.setText("");
            }
        }
    }//GEN-LAST:event_btn_userAcc_saveActionPerformed

    private void btn_customerReg_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customerReg_saveActionPerformed

        rb_customerReg_active.setActionCommand("Active");
        rb_customerReg_deactive.setActionCommand("Deactive");

        String name = tf_customerReg_name.getText();
        String addressField1 = tf_customerReg_address1.getText();
        String addressField2 = tf_customerReg_address2.getText();
        String addressField3 = tf_customerReg_address3.getText();
        String address = addressField1 + ", " + ", " + addressField2 + addressField3;
        String telNo = tf_customerReg_telNo.getText();
        String loan = tf_customerReg_loan.getText();
        String loanPeriod = tf_customerReg_loanPeriod.getText();
        String userType = btnGroup_customerReg.getSelection().getActionCommand();

        if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Name Field can't be Empty", "Customer Registration", JOptionPane.ERROR_MESSAGE);

        } else {
            Customer customer = new Customer();

            customer.setName(name);
            customer.setTelNo(telNo);
            customer.setAddress(address);
            customer.setAddress1(addressField1);
            customer.setAddress2(addressField2);
            customer.setAddress3(addressField3);
            customer.setLoan(loan);
            customer.setLoanPeriod(loanPeriod);
            customer.setCustomerType(userType);

            customerControler.create(customer);

            JOptionPane.showMessageDialog(null, "Data Sucessfully saved !", "Customer Registration", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) table_customerReg.getModel();
            model.addRow(new Object[]{name, address, telNo, loan, loanPeriod, userType});

            tf_customerReg_name.setText("");
            tf_customerReg_address1.setText("");
            tf_customerReg_address2.setText("");
            tf_customerReg_address3.setText("");
            tf_customerReg_telNo.setText("");
            tf_customerReg_loan.setText("");
            tf_customerReg_loanPeriod.setText("");
        }
    }//GEN-LAST:event_btn_customerReg_saveActionPerformed

    private void tf_itemCategory_itemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_itemCategory_itemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_itemCategory_itemCodeActionPerformed

    private void btn_itemCategory_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemCategory_editActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemCategory.getModel();

        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to edit this Item Category ?", "Item Category Edit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (dialogResult == JOptionPane.YES_OPTION) {
            tf_itemCategory_itemCode.setText(model.getValueAt(table_itemCategory.getSelectedRow(), 0).toString());
            tf_itemCategory_itemName.setText(model.getValueAt(table_itemCategory.getSelectedRow(), 1).toString());
            //String itemName = model.getValueAt(table_itemCategory.getSelectedRow(), 1).toString();

            btn_itemCategory_update.setEnabled(true);
            btn_itemCategory_edit.setEnabled(false);
            itemCategory_itemCode = model.getValueAt(table_itemCategory.getSelectedRow(), 0).toString();
        }
    }//GEN-LAST:event_btn_itemCategory_editActionPerformed

    private void btn_itemCategory_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemCategory_saveActionPerformed

        String itemCode = tf_itemCategory_itemCode.getText();
        String itemName = tf_itemCategory_itemName.getText();

        if (itemCode.equals("") || itemName.equals("")) {
            JOptionPane.showMessageDialog(null, "Item Category Code and Item Category Name Can't be Empty", "Item Category Registration", JOptionPane.WARNING_MESSAGE);
        } else {
            ItemCategory itemCtegory = new ItemCategory();

            itemCtegory.setItemCode(itemCode);
            itemCtegory.setCategoryName(itemName);

            itemCategoryControler.create(itemCtegory);

            JOptionPane.showMessageDialog(null, "Data Sucessfully saved !", "Item Category Registration", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) table_itemCategory.getModel();
            model.addRow(new Object[]{itemCode, itemName});

            tf_itemCategory_itemCode.setText("");
            tf_itemCategory_itemName.setText("");
        }
    }//GEN-LAST:event_btn_itemCategory_saveActionPerformed

    private void btn_itemReg_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemReg_saveActionPerformed

        String itemName = tf_itemReg_itemName.getText();
        String itemCode = tf_itemReg_itemCode.getText();
        String itemCategory = cb_itemReg_itemCategory.getSelectedItem().toString();
        String barcode = tf_itemReg_barcode.getText();
        String cost = tf_itemReg_cost.getText();
        String wholesalePrice = tf_itemReg_wholesale.getText();
        String retailPrice = tf_itemReg_retail.getText();

        if (itemName.equals("") || itemCode.equals("") || cost.equals("")) {
            JOptionPane.showMessageDialog(null, "Item Code, Name and Cost must be initialize", "Item Registration", JOptionPane.ERROR_MESSAGE);
        } else {
            Item item = new Item();

            item.setItemCode(itemCode);
            item.setItemName(itemName);
            item.setCategory(itemCategory);
            item.setBarcode(barcode);
            item.setCost(cost);
            item.setWholesalePrice(wholesalePrice);
            item.setRetailPrice(retailPrice);

            itemControler.create(item);

            JOptionPane.showMessageDialog(null, "Data Sucessfully saved !", "Item Registration", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) table_itemReg.getModel();
            model.addRow(new Object[]{itemCode, itemName, itemCategory, barcode, cost, wholesalePrice, retailPrice});

            tf_itemReg_itemName.setText("");
            tf_itemReg_itemCode.setText("");
            tf_itemReg_barcode.setText("");
            tf_itemReg_cost.setText("");
            tf_itemReg_wholesale.setText("");
            tf_itemReg_retail.setText("");
        }
    }//GEN-LAST:event_btn_itemReg_saveActionPerformed

    private void table_customerRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_customerRegMouseClicked
        btn_customerReg_edit.setEnabled(true);
        btn_customerReg_delete.setEnabled(true);
    }//GEN-LAST:event_table_customerRegMouseClicked

    private void table_itemCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_itemCategoryMouseClicked
        btn_itemCategory_edit.setEnabled(true);
        btn_itemCategory_delete.setEnabled(true);
    }//GEN-LAST:event_table_itemCategoryMouseClicked

    private void btn_itemCategory_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemCategory_updateActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemCategory.getModel();

        ItemCategory itemCategory;

        String itemCode = itemCategory_itemCode; //model.getValueAt(table_itemCategory.getSelectedRow(), 0).toString();
        //System.out.println("item Code : " + itemCode);

        Query query = (Query) entitymanager.createQuery("Select e " + "from ItemCategory e " + "where e.itemCode = '" + itemCode + "'");
        List<ItemCategory> list_itemCategory = (List<ItemCategory>) query.getResultList();

        itemCategory = list_itemCategory.get(0);

        itemCategory.setItemCode(tf_itemCategory_itemCode.getText());
        itemCategory.setCategoryName(tf_itemCategory_itemName.getText());

        try {
            itemCategoryControler.edit(itemCategory);
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println("id : " + itemCategory.getId());

        model.setValueAt(tf_itemCategory_itemCode.getText(), table_itemCategory.getSelectedRow(), 0);
        model.setValueAt(tf_itemCategory_itemName.getText(), table_itemCategory.getSelectedRow(), 1);

    }//GEN-LAST:event_btn_itemCategory_updateActionPerformed

    private void btn_itemCategory_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemCategory_refreshActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemCategory.getModel();

        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Query query = (Query) entitymanager.createQuery("Select e " + "from ItemCategory e ");
        List<ItemCategory> list = (List<ItemCategory>) query.getResultList();

        list.stream().forEach((e) -> {
            model.addRow(new Object[]{e.getItemCode(), e.getCategoryName()});
        });
    }//GEN-LAST:event_btn_itemCategory_refreshActionPerformed

    private void btn_itemCategory_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemCategory_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemCategory.getModel();
        ItemCategory itemCategory;

        if (table_itemCategory.getSelectedRow() != -1) {
            String itemCode = model.getValueAt(table_itemCategory.getSelectedRow(), 0).toString();
            Query query = (Query) entitymanager.createQuery("Select e " + "from ItemCategory e " + "where e.itemCode = '" + itemCode + "'");
            List<ItemCategory> list_itemCategory = (List<ItemCategory>) query.getResultList();
            itemCategory = list_itemCategory.get(0);

            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure that you want to permanetly delete the selected item name " + itemCategory.getCategoryName(), "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    itemCategoryControler.destroy(itemCategory.getId());
                    JOptionPane.showMessageDialog(null, "Data Sucessfully Deleted !", "Item Category Delete", JOptionPane.INFORMATION_MESSAGE);
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Data doesn't exist in database", "Item Category Delete", JOptionPane.ERROR_MESSAGE);
                }
                model.removeRow(table_itemCategory.getSelectedRow());
            }
        } else {
            if (table_itemCategory.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is Empty! Please press refresh button", "Item Category Delete", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "you Must select the Item first !", "Item Category Delete", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_itemCategory_deleteActionPerformed

    private void btn_itemReg_barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemReg_barcodeActionPerformed
        
            //        Barcode4jGenerator barcode = new Barcode4jGenerator();
//        if (barcode.generateJPEG("AXT731", "Lemonpuff")) {
//            JOptionPane.showMessageDialog(null, "Barcode Generated", "Barcode Generator", JOptionPane.INFORMATION_MESSAGE);
//        } else {
//            JOptionPane.showMessageDialog(null, "Barcode Generated Fail !", "Barcode Generator", JOptionPane.ERROR_MESSAGE);
//        }
        
        
        
        try {
            BarcodeGenerator barcode = new BarcodeGenerator();
            if(barcode.outputtingBarcodeAsPNG("ASD123", "test")){
                JOptionPane.showMessageDialog(null, "Barcode Generated", "Barcode Generator", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Barcode Generated Fail !", "Barcode Generator", JOptionPane.ERROR_MESSAGE);
            }
        } catch (BarcodeException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_itemReg_barcodeActionPerformed

    private void btn_userAcc_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_userAcc_refreshActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_userReg.getModel();

        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Query query = (Query) entitymanager.createQuery("Select e " + "from User e ");
        List<User> list = (List<User>) query.getResultList();

        list.stream().forEach((e) -> {
            model.addRow(new Object[]{e.getName(), e.getUserType(), e.getSequrityQ()});
        });
    }//GEN-LAST:event_btn_userAcc_refreshActionPerformed

    private void btn_profit_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_profit_refreshActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_profit.getModel();

        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Query query = (Query) entitymanager.createQuery("Select e " + "from Profit e ");
        List<Profit> list = (List<Profit>) query.getResultList();

        list.stream().forEach((e) -> {
            model.addRow(new Object[]{e.getDate(), e.getIncome(), e.getCoast(), e.getProfit()});
        });
    }//GEN-LAST:event_btn_profit_refreshActionPerformed

    private void btn_customerReg_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customerReg_refreshActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_customerReg.getModel();

        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Query query = (Query) entitymanager.createQuery("Select e " + "from Customer e ");
        List<Customer> list = (List<Customer>) query.getResultList();

        list.stream().forEach((e) -> {
            model.addRow(new Object[]{e.getName(), e.getAddress(), e.getTelNo(), e.getLoan(), e.getLoanPeriod(), e.getCustomerType()});
        });
    }//GEN-LAST:event_btn_customerReg_refreshActionPerformed

    private void btn_suplerReg_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suplerReg_refreshActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_customerReg.getModel();

        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Query query = (Query) entitymanager.createQuery("Select e " + "from SupplierDetails e ");
        List<SupplierDetails> list = (List<SupplierDetails>) query.getResultList();

        list.stream().forEach((e) -> {
            model.addRow(new Object[]{e.getSupplierName(), e.getContactName(), e.getAddress(), e.getTelNo(), e.getFaxNo(), e.getLoan(), e.getLoanPeriod(), e.getCategory()});
        });
    }//GEN-LAST:event_btn_suplerReg_refreshActionPerformed

    private void btn_itemReg_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemReg_refreshActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemReg.getModel();

        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        Query query = (Query) entitymanager.createQuery("Select e " + "from Item e ");
        List<Item> list = (List<Item>) query.getResultList();

        list.stream().forEach((e) -> {
            model.addRow(new Object[]{e.getItemCode(), e.getItemName(), e.getCategory(), e.getBarcode(), e.getCost(), e.getWholesalePrice(), e.getRetailPrice()});
        });
    }//GEN-LAST:event_btn_itemReg_refreshActionPerformed

    private void table_userRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_userRegMouseClicked
        btn_userAcc_edit.setEnabled(true);
        btn_userAcc_delete.setEnabled(true);
    }//GEN-LAST:event_table_userRegMouseClicked

    private void btn_userAcc_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_userAcc_editActionPerformed
//        DefaultTableModel model = (DefaultTableModel) table_userReg.getModel();
//        String userName = (String) model.getValueAt(table_userReg.getSelectedRow(), 0);
//        
//        Query query = (Query) entitymanager.createQuery("Select e " + "from ItemCategory e " + "where e.itemCode = '"+userName+"'");
//        List<User> list_user = (List<User>)query.getResultList( );
//        
//        User user = list_user.get(0);


    }//GEN-LAST:event_btn_userAcc_editActionPerformed

    private void btn_customerReg_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customerReg_editActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_customerReg.getModel();
        String name = (String) model.getValueAt(table_customerReg.getSelectedRow(), 0);

        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to edit this Customer", "Customer Edit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (dialogResult == JOptionPane.YES_OPTION) {
            Query query = (Query) entitymanager.createQuery("Select e " + "from Customer e " + "where e.name = '" + name + "'");
            List<Customer> list_user = (List<Customer>) query.getResultList();

            Customer customer = list_user.get(0);

            tf_customerReg_name.setText(customer.getName());
            tf_customerReg_address1.setText(customer.getAddress1());
            tf_customerReg_address2.setText(customer.getAddress2());
            tf_customerReg_address3.setText(customer.getAddress3());
            tf_customerReg_loan.setText(customer.getLoan());
            tf_customerReg_loanPeriod.setText(customer.getLoanPeriod());
            tf_customerReg_telNo.setText(customer.getTelNo());
            if (customer.getCustomerType().equals("Active")) {
                rb_customerReg_active.setSelected(true);
            } else {
                rb_customerReg_deactive.setSelected(true);
            }
            cusromer_name = customer.getName();
            btn_customerReg_update.setEnabled(true);
        }
    }//GEN-LAST:event_btn_customerReg_editActionPerformed

    private void btn_customerReg_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customerReg_updateActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_customerReg.getModel();

        Customer customer;
        String name = cusromer_name;

        rb_customerReg_active.setActionCommand("Active");
        rb_customerReg_deactive.setActionCommand("Deactive");

        Query query = (Query) entitymanager.createQuery("Select e " + "from Customer e " + "where e.name = '" + name + "'");
        List<Customer> list_user = (List<Customer>) query.getResultList();

        customer = list_user.get(0);
        String address = tf_customerReg_address1.getText() + ", " + tf_customerReg_address2.getText() + ", " + tf_customerReg_address3.getText();
        customer.setName(tf_customerReg_name.getText());
        customer.setAddress(address);
        customer.setAddress1(tf_customerReg_address1.getText());
        customer.setAddress2(tf_customerReg_address2.getText());
        customer.setAddress3(tf_customerReg_address3.getText());
        customer.setLoan(tf_customerReg_loan.getText());
        customer.setLoanPeriod(tf_customerReg_loanPeriod.getText());
        customer.setTelNo(tf_customerReg_telNo.getText());
        customer.setCustomerType(btnGroup_customerReg.getSelection().getActionCommand());

        try {
            customerControler.edit(customer);
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Customer Record Update Fail !", "Customer Record Update", JOptionPane.ERROR_MESSAGE);
        }

        model.setValueAt(tf_customerReg_name.getText(), table_customerReg.getSelectedRow(), 0);
        model.setValueAt(address, table_customerReg.getSelectedRow(), 1);
        model.setValueAt(tf_customerReg_telNo.getText(), table_customerReg.getSelectedRow(), 2);
        model.setValueAt(tf_customerReg_loan.getText(), table_customerReg.getSelectedRow(), 3);
        model.setValueAt(tf_customerReg_loanPeriod.getText(), table_customerReg.getSelectedRow(), 4);
        model.setValueAt(btnGroup_customerReg.getSelection().getActionCommand(), table_customerReg.getSelectedRow(), 5);

        tf_customerReg_name.setText("");
        tf_customerReg_address1.setText("");
        tf_customerReg_address2.setText("");
        tf_customerReg_address3.setText("");
        tf_customerReg_loan.setText("");
        tf_customerReg_loanPeriod.setText("");
        tf_customerReg_telNo.setText("");

    }//GEN-LAST:event_btn_customerReg_updateActionPerformed

    private void btn_customerReg_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customerReg_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_customerReg.getModel();
        Customer customer;

        if (table_customerReg.getSelectedRow() != -1) {
            String customerName = model.getValueAt(table_customerReg.getSelectedRow(), 0).toString();
            Query query = (Query) entitymanager.createQuery("Select e " + "from Customer e " + "where e.name = '" + customerName + "'");
            List<Customer> list_customer = (List<Customer>) query.getResultList();
            customer = list_customer.get(0);

            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure that you want to permanetly delete the selected Customer name " + customer.getName(), "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    customerControler.destroy(customer.getcustomerId());
                    JOptionPane.showMessageDialog(null, "Customer Sucessfully Deleted !", "Customer Delete", JOptionPane.INFORMATION_MESSAGE);
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Customer doesn't exist in database", "Customer Delete", JOptionPane.ERROR_MESSAGE);
                }
                model.removeRow(table_customerReg.getSelectedRow());
                tf_customerReg_name.setText("");
                tf_customerReg_address1.setText("");
                tf_customerReg_address2.setText("");
                tf_customerReg_address3.setText("");
                tf_customerReg_loan.setText("");
                tf_customerReg_loanPeriod.setText("");
                tf_customerReg_telNo.setText("");
            }
        } else {
            if (table_itemCategory.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is Empty! Please press refresh button", "Customer Delete", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "you Must select the Customer first !", "Customer Delete", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_customerReg_deleteActionPerformed

    private void btn_suplerReg_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suplerReg_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_suplierReg.getModel();
        SupplierDetails supplier;

        if (table_suplierReg.getSelectedRow() != -1) {
            String suplierName = model.getValueAt(table_suplierReg.getSelectedRow(), 0).toString();
            Query query = (Query) entitymanager.createQuery("Select e " + "from SupplierDetails e " + "where e.supplierName = '" + suplierName + "'");
            List<SupplierDetails> list_supplier = (List<SupplierDetails>) query.getResultList();
            supplier = list_supplier.get(0);

            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure that you want to permanetly delete the selected Supplier  " + supplier.getSupplierName(), "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    customerControler.destroy(supplier.getSupplierID());
                    JOptionPane.showMessageDialog(null, "Supplier Sucessfully Deleted !", "Supplier Delete", JOptionPane.INFORMATION_MESSAGE);
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Supplier doesn't exist in database", "Supplier Delete", JOptionPane.ERROR_MESSAGE);
                }
                model.removeRow(table_suplierReg.getSelectedRow());
                tf_suplierReg_name.setText("");
                tf_suplierReg_address1.setText("");
                tf_suplierReg_contactName.setText("");
                tf_suplierReg_address2.setText("");
                tf_suplierReg_address3.setText("");
                tf_suplierReg_Loan.setText("");
                tf_suplierReg_loanPeriod.setText("");
                tf_suplierReg_telNo.setText("");
                tf_suplierReg_faxNo.setText("");
            }
        } else {
            if (table_suplierReg.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is Empty! Please press refresh button", "Customer Delete", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "you Must select the Customer first !", "Customer Delete", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_suplerReg_deleteActionPerformed

    private void btn_itemReg_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemReg_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemReg.getModel();
        Item item;

        if (table_itemReg.getSelectedRow() != -1) {
            String itemCode = model.getValueAt(table_itemReg.getSelectedRow(), 0).toString();
            Query query = (Query) entitymanager.createQuery("Select e " + "from Item e " + "where e.itemCode = '" + itemCode + "'");
            List<Item> list_item = (List<Item>) query.getResultList();
            item = list_item.get(0);

            int dialogResult = JOptionPane.showConfirmDialog(null, "Are you sure that you want to permanetly delete the selected Item  " + item.getItemName(), "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    customerControler.destroy(item.getId());
                    JOptionPane.showMessageDialog(null, "Item Sucessfully Deleted !", "Item Delete", JOptionPane.INFORMATION_MESSAGE);
                } catch (NonexistentEntityException ex) {
                    Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Item doesn't exist in database", "Item Delete", JOptionPane.ERROR_MESSAGE);
                }
                model.removeRow(table_itemReg.getSelectedRow());
                tf_itemCategory_itemName.setText("");
                tf_itemCategory_itemCode.setText("");
                tf_itemReg_barcode.setText("");
                tf_itemReg_cost.setText("");
                tf_itemReg_wholesale.setText("");
                tf_itemReg_retail.setText("");
            }
        } else {
            if (table_itemReg.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is Empty! Please press refresh button", "Customer Delete", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "you Must select the Customer first !", "Customer Delete", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_itemReg_deleteActionPerformed

    private void btn_suplerReg_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suplerReg_editActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_suplierReg.getModel();
        supplierReg_name = (String) model.getValueAt(table_suplierReg.getSelectedRow(), 0);

        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to edit this Supplier ?", "Supplier Edit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (dialogResult == JOptionPane.YES_OPTION) {
            Query query = (Query) entitymanager.createQuery("Select e " + "from SupplierDetails e " + "where e.supplierName = '" + supplierReg_name + "'");
            List<SupplierDetails> list_user = (List<SupplierDetails>) query.getResultList();

            SupplierDetails supplier = list_user.get(0);

            tf_suplierReg_name.setText(supplier.getSupplierName());
            tf_suplierReg_contactName.setText(supplier.getContactName());
            tf_suplierReg_address1.setText(supplier.getAddress1());
            tf_suplierReg_address2.setText(supplier.getAddress2());
            tf_suplierReg_address3.setText(supplier.getAddress3());
            tf_suplierReg_telNo.setText(supplier.getTelNo());
            tf_suplierReg_faxNo.setText(supplier.getFaxNo());
            tf_suplierReg_Loan.setText(supplier.getLoan());
            tf_suplierReg_loanPeriod.setText(supplier.getLoanPeriod());
            cusromer_name = supplier.getSupplierName();
            btn_customerReg_update.setEnabled(true);
            
            btn_suplerReg_update.setEnabled(true);
            btn_suplerReg_edit.setEnabled(false);
        }
    }//GEN-LAST:event_btn_suplerReg_editActionPerformed

    private void btn_itemReg_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemReg_editActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemReg.getModel();
        item_itemCode = (String) model.getValueAt(table_itemReg.getSelectedRow(), 0);

        int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to edit selected Item ?", "Item Edit", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (dialogResult == JOptionPane.YES_OPTION) {
            Query query = (Query) entitymanager.createQuery("Select e " + "from Item e " + "where e.itemCode = '" + item_itemCode + "'");
            List<Item> list_item = (List<Item>) query.getResultList();

            Item item = list_item.get(0);

            tf_itemReg_itemName.setText(item.getItemName());
            tf_itemReg_itemCode.setText(item.getItemCode());
            tf_itemReg_barcode.setText(item.getBarcode());
            tf_itemReg_cost.setText(item.getCost());
            tf_itemReg_wholesale.setText(item.getWholesalePrice());
            tf_itemReg_retail.setText(item.getRetailPrice());
            cb_itemReg_itemCategory.setSelectedItem(item.getCategory());
            
            btn_itemReg_delete.setEnabled(true);
            btn_itemReg_update.setEnabled(true);
            btn_itemReg_edit.setEnabled(false);
        }
    }//GEN-LAST:event_btn_itemReg_editActionPerformed

    private void table_itemRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_itemRegMouseClicked
        btn_itemReg_edit.setEnabled(true);
        btn_itemReg_delete.setEnabled(true);
    }//GEN-LAST:event_table_itemRegMouseClicked

    private void btn_suplerReg_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suplerReg_updateActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_suplierReg.getModel();

        SupplierDetails supplier;
        String name = supplierReg_name;

        Query query = (Query) entitymanager.createQuery("Select e " + "from SupplierDetails e " + "where e.supplierName = '" + name + "'");
        List<SupplierDetails> list_user = (List<SupplierDetails>) query.getResultList();

        supplier = list_user.get(0);
        String address = tf_suplierReg_address1.getText() + ", " + tf_suplierReg_address2.getText() + ", " + tf_suplierReg_address3.getText();
        supplier.setSupplierName(tf_suplierReg_name.getText());
        supplier.setContactName(tf_suplierReg_contactName.getText());
        supplier.setAddress(address);
        supplier.setAddress1(tf_suplierReg_address1.getText());
        supplier.setAddress2(tf_suplierReg_address2.getText());
        supplier.setAddress3(tf_suplierReg_address3.getText());
        supplier.setTelNo(tf_suplierReg_telNo.getText());
        supplier.setFaxNo(tf_suplierReg_faxNo.getText());
        supplier.setLoan(tf_suplierReg_Loan.getText());
        supplier.setLoanPeriod(tf_suplierReg_loanPeriod.getText());
        supplier.setCategory(cb_suplierReg_category.getSelectedItem().toString());

        try {
            supplierControler.edit(supplier);
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Suplier Record Update Fail !", "Supplier Record Update", JOptionPane.ERROR_MESSAGE);
        }

        model.setValueAt(tf_suplierReg_name.getText(), table_suplierReg.getSelectedRow(), 0);
        model.setValueAt(tf_suplierReg_contactName, table_suplierReg.getSelectedRow(), 1);
        model.setValueAt(address, table_suplierReg.getSelectedRow(), 2);
        model.setValueAt(tf_suplierReg_telNo.getText(), table_suplierReg.getSelectedRow(), 3);
        model.setValueAt(tf_suplierReg_faxNo.getText(), table_suplierReg.getSelectedRow(), 4);
        model.setValueAt(tf_suplierReg_Loan.getText(), table_suplierReg.getSelectedRow(), 5);
        model.setValueAt(tf_suplierReg_loanPeriod.getText(), table_suplierReg.getSelectedRow(), 6);
        model.setValueAt(cb_suplierReg_category.getSelectedItem().toString(), table_suplierReg.getSelectedRow(), 7);

        tf_suplierReg_name.setText("");
        tf_suplierReg_contactName.setText("");
        tf_suplierReg_address1.setText("");
        tf_suplierReg_address2.setText("");
        tf_suplierReg_address3.setText("");
        tf_suplierReg_Loan.setText("");
        tf_suplierReg_loanPeriod.setText("");
        tf_suplierReg_telNo.setText("");
        tf_suplierReg_faxNo.setText("");
    }//GEN-LAST:event_btn_suplerReg_updateActionPerformed

    private void btn_itemReg_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_itemReg_updateActionPerformed
        DefaultTableModel model = (DefaultTableModel) table_itemReg.getModel();

        Item item;
        String name = item_itemCode;

        Query query = (Query) entitymanager.createQuery("Select e " + "from Item e " + "where e.itemCode = '" + item_itemCode + "'");
        List<Item> list_item = (List<Item>) query.getResultList();

        item = list_item.get(0);
        item.setItemCode(tf_itemReg_itemCode.getText());
        item.setItemName(tf_itemReg_itemName.getText());
        item.setBarcode(tf_itemReg_barcode.getText());
        item.setWholesalePrice(tf_itemReg_wholesale.getText());
        item.setCost(tf_itemReg_cost.getText());
        item.setRetailPrice(tf_itemReg_retail.getText());

        try {
            itemControler.edit(item);
        } catch (Exception ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Item Record Update Fail !", "Item Record Update", JOptionPane.ERROR_MESSAGE);
        }

        model.setValueAt(tf_itemReg_itemCode.getText(), table_suplierReg.getSelectedRow(), 0);
        model.setValueAt(tf_itemReg_itemName, table_suplierReg.getSelectedRow(), 1);
        model.setValueAt(cb_itemReg_itemCategory.getSelectedItem().toString(), table_suplierReg.getSelectedRow(), 2);
        model.setValueAt(tf_itemReg_barcode.getText(), table_suplierReg.getSelectedRow(), 3);
        model.setValueAt(tf_itemReg_cost.getText(), table_suplierReg.getSelectedRow(), 4);
        model.setValueAt(tf_itemReg_wholesale.getText(), table_suplierReg.getSelectedRow(), 5);
        model.setValueAt(tf_itemReg_retail.getText(), table_suplierReg.getSelectedRow(), 6);

        tf_itemReg_itemCode.setText("");
        tf_itemReg_itemName.setText("");
        tf_itemReg_barcode.setText("");
        tf_itemReg_cost.setText("");
        tf_itemReg_wholesale.setText("");
        tf_itemReg_retail.setText("");

    }//GEN-LAST:event_btn_itemReg_updateActionPerformed

    private void table_suplierRegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_suplierRegMouseClicked
        btn_suplerReg_edit.setEnabled(true);
        btn_suplerReg_delete.setEnabled(true);
    }//GEN-LAST:event_table_suplierRegMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

                MainMenu mainLayout = new MainMenu();
                mainLayout.setExtendedState(JFrame.MAXIMIZED_BOTH);
                mainLayout.setSize(screenSize);

                new MainMenu().setVisible(true);

                mainLayout.setResizable(false);
                mainLayout.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
    }

    public String createMD5Password(String password) {

        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(password.getBytes());
            byte byteData[] = md.digest();
            StringBuffer sb = new StringBuffer();

            for (int i = 0; i < byteData.length; i++) {
                sb.append(Integer.toString((byteData[i] & 0xff) + 0x100, 16).substring(1));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }

        return "FAIL";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager POSsystemPUEntityManager;
    private javax.swing.ButtonGroup btnGroup_customerReg;
    private javax.swing.ButtonGroup btnGroup_userAcc;
    private javax.swing.JButton btn_control_customerLoan;
    private javax.swing.JButton btn_control_customerReg;
    private javax.swing.JButton btn_control_profit;
    private javax.swing.JButton btn_control_suplierReg;
    private javax.swing.JButton btn_control_user;
    private javax.swing.JButton btn_control_userControl;
    private javax.swing.JButton btn_customerReg_delete;
    private javax.swing.JButton btn_customerReg_edit;
    private javax.swing.JButton btn_customerReg_refresh;
    private javax.swing.JButton btn_customerReg_save;
    private javax.swing.JButton btn_customerReg_update;
    private javax.swing.JButton btn_itemCategory_delete;
    private javax.swing.JButton btn_itemCategory_edit;
    private javax.swing.JButton btn_itemCategory_refresh;
    private javax.swing.JButton btn_itemCategory_save;
    private javax.swing.JButton btn_itemCategory_update;
    private javax.swing.JButton btn_itemReg_barcode;
    private javax.swing.JButton btn_itemReg_delete;
    private javax.swing.JButton btn_itemReg_edit;
    private javax.swing.JButton btn_itemReg_refresh;
    private javax.swing.JButton btn_itemReg_save;
    private javax.swing.JButton btn_itemReg_update;
    private javax.swing.JButton btn_item_inventory;
    private javax.swing.JButton btn_item_itemCategory;
    private javax.swing.JButton btn_item_itemReg;
    private javax.swing.JButton btn_profit_refresh;
    private javax.swing.JButton btn_suplerReg_delete;
    private javax.swing.JButton btn_suplerReg_edit;
    private javax.swing.JButton btn_suplerReg_refresh;
    private javax.swing.JButton btn_suplerReg_save;
    private javax.swing.JButton btn_suplerReg_update;
    private javax.swing.JButton btn_userAcc_delete;
    private javax.swing.JButton btn_userAcc_edit;
    private javax.swing.JButton btn_userAcc_refresh;
    private javax.swing.JButton btn_userAcc_save;
    private javax.swing.JButton btn_userAcc_update;
    private com.toedter.calendar.JDateChooser calender_profit_daily;
    private javax.swing.JComboBox cb_itemReg_itemCategory;
    private javax.swing.JComboBox cb_suplierReg_category;
    private javax.swing.JComboBox cb_userAcc_securityQ;
    private javax.swing.JPanel controlLeftPanel;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JPanel itemLeftPanel;
    private javax.swing.JPanel itemPane;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JMonthChooser mc_profit_month;
    private javax.swing.JPanel panel_customerLoan;
    private javax.swing.JPanel panel_customerReg;
    private javax.swing.JPanel panel_inventory;
    private javax.swing.JPanel panel_itemCategory;
    private javax.swing.JPanel panel_itemReg;
    private javax.swing.JPanel panel_profit;
    private javax.swing.JPanel panel_suplierReg;
    private javax.swing.JPanel panel_user;
    private javax.swing.JPanel panel_userControl;
    private javax.swing.JRadioButton rb_customerReg_active;
    private javax.swing.JRadioButton rb_customerReg_deactive;
    private javax.swing.JRadioButton rb_profit_daily;
    private javax.swing.JRadioButton rb_profit_month;
    private javax.swing.JRadioButton rb_userAcc_admin;
    private javax.swing.JRadioButton rb_userAcc_user;
    private javax.swing.JPanel tabAction;
    private javax.swing.JPanel tabControll;
    private javax.swing.JPanel tabItem;
    private javax.swing.JPanel tabReport;
    private javax.swing.JPanel tabTransaction;
    private javax.swing.JTable table_customerReg;
    private javax.swing.JTable table_itemCategory;
    private javax.swing.JTable table_itemReg;
    private javax.swing.JTable table_profit;
    private javax.swing.JTable table_suplierReg;
    private javax.swing.JTable table_userReg;
    private javax.swing.JTextField tf_customerReg_address1;
    private javax.swing.JTextField tf_customerReg_address2;
    private javax.swing.JTextField tf_customerReg_address3;
    private javax.swing.JTextField tf_customerReg_loan;
    private javax.swing.JTextField tf_customerReg_loanPeriod;
    private javax.swing.JTextField tf_customerReg_name;
    private javax.swing.JTextField tf_customerReg_telNo;
    private javax.swing.JTextField tf_itemCategory_itemCode;
    private javax.swing.JTextField tf_itemCategory_itemName;
    private javax.swing.JTextField tf_itemReg_barcode;
    private javax.swing.JTextField tf_itemReg_cost;
    private javax.swing.JTextField tf_itemReg_itemCode;
    private javax.swing.JTextField tf_itemReg_itemName;
    private javax.swing.JTextField tf_itemReg_retail;
    private javax.swing.JTextField tf_itemReg_wholesale;
    private javax.swing.JTextField tf_suplierReg_Loan;
    private javax.swing.JTextField tf_suplierReg_address1;
    private javax.swing.JTextField tf_suplierReg_address2;
    private javax.swing.JTextField tf_suplierReg_address3;
    private javax.swing.JTextField tf_suplierReg_contactName;
    private javax.swing.JTextField tf_suplierReg_faxNo;
    private javax.swing.JTextField tf_suplierReg_loanPeriod;
    private javax.swing.JTextField tf_suplierReg_name;
    private javax.swing.JTextField tf_suplierReg_telNo;
    private javax.swing.JPasswordField tf_userAcc_confirmPassword;
    private javax.swing.JTextField tf_userAcc_name;
    private javax.swing.JPasswordField tf_userAcc_password;
    private javax.swing.JTextField tf_userAcc_sequrityAnswer;
    // End of variables declaration//GEN-END:variables
}
